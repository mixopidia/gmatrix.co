import React, { useEffect, useState } from "react";
import { api, setCurrentPair } from "../lib/api";

function coerceArray(payload){
  if (Array.isArray(payload)) return payload;
  if (!payload || typeof payload !== "object") return [];
  return payload.value || payload.markets || payload.data || [];
}
function fmt(n){ if(n===undefined||n===null||n==="") return "-"; const x=Number(n); return isFinite(x)?(x>=1000?x.toLocaleString():x.toString()):String(n); }

export default function MarketsQulabs(){
  const [rows,setRows]=useState([]);
  const [loading,setLoading]=useState(true);

  useEffect(()=>{
    let alive=true;
    const load=async()=>{
      try{
        const mr = await api.get("/api/markets");
        const markets = coerceArray(mr.data);
        const withTicks = await Promise.all(markets.map(async m=>{
          const symbol = m.symbol || `${m.base}/${m.quote}`;
          try {
            const t = await api.get("/api/market-data/ticker", { params: { symbol }});
            const d = t.data || {};
            const price = Number(d.price ?? d.lastPrice ?? d.c ?? d.last ?? d.close);
            const change = Number(d.priceChangePercent ?? d.percent ?? d.p ?? d.changePercent ?? 0);
            return { id:m._id || symbol, symbol, price, change };
          } catch {
            return { id:m._id || symbol, symbol, price:"-", change:"-" };
          }
        }));
        if(alive){ setRows(withTicks); setLoading(false); }
      } catch(e) {
        console.error("Markets load failed:", e);
        if(alive) setLoading(false);
      }
    };
    load();
    const id=setInterval(load,5000);
    return ()=>{ alive=false; clearInterval(id); };
  },[]);

  return (
    <div className="market-pairs">
      <div className="market-title d-flex justify-content-between align-items-center">
        <span>Pair</span><span>Last Price</span><span>Change</span>
      </div>
      <div className="market-list customscroll">
        {loading && <div className="p-2">Loading…</div>}
        {!loading && rows.length===0 && <div className="p-2">No markets available</div>}
        <ul className="list-unstyled mb-0">
          {rows.map(r=>(
            <li key={r.id}
                className="d-flex justify-content-between align-items-center py-1 px-2 cursor-pointer"
                onClick={()=>setCurrentPair(r.symbol)}>
              <span className="pair">{r.symbol}</span>
              <span className="last">{fmt(r.price)}</span>
              <span className={`change ${Number(r.change)>=0 ? "text-success":"text-danger"}`}>
                {r.change==="-" ? "-" : `${Number(r.change).toFixed(2)}%`}
              </span>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}



