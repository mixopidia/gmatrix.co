import axios from "axios";

/** Resolve API base URL safely across CRA, Vite, or plain builds. */
function resolveApiBase() {
  // 1) Window-injected globals (optional)
  if (typeof window !== "undefined") {
    if (window.__ENV__ && window.__ENV__.REACT_APP_API_BASE) return window.__ENV__.REACT_APP_API_BASE;
    if (window.__API_BASE__) return window.__API_BASE__;
  }
  // 2) Vite style env
  try {
    if (typeof import !== "undefined" && import.meta && import.meta.env && import.meta.env.VITE_API_BASE) {
      return import.meta.env.VITE_API_BASE;
    }
  } catch (_) {}
  // 3) CRA style env (guarded; do NOT touch `process` unless it exists)
  try {
    if (typeof process !== "undefined" && process.env && process.env.REACT_APP_API_BASE) {
      return process.env.REACT_APP_API_BASE;
    }
  } catch (_) {}
  // 4) Sensible default: same host, backend on :4000
  if (typeof window !== "undefined") {
    const proto = window.location?.protocol || "http:";
    const host  = window.location?.hostname || "localhost";
    return `${proto}//${host}:4000`;
  }
  return "http://localhost:4000";
}

export const API_BASE = resolveApiBase();

export const api = axios.create({
  baseURL: API_BASE,
  headers: { "Content-Type": "application/json" },
});

// Bootstrap auth header from saved token (if any)
const _t = (typeof window !== "undefined" && window.localStorage)
  ? window.localStorage.getItem("token")
  : null;
if (_t) api.defaults.headers.common["Authorization"] = `Bearer ${_t}`;

/* ===================== Markets ===================== */
export const getMarkets = () => api.get("/api/markets");
export const getCurrentPair = (symbol) =>
  api.get(`/api/market-data/ticker?symbol=${symbol}`);
export const setCurrentPair = (symbol) => {
  if (typeof window !== "undefined" && window.localStorage) {
    window.localStorage.setItem("currentPair", symbol);
    window.dispatchEvent(new CustomEvent("pairChange", { detail: symbol }));
  }
  return symbol;
};
export const loadCurrentPair = () =>
  (typeof window !== "undefined" && window.localStorage?.getItem("currentPair")) || "BTCUSDT";
export const onPairChange = (cb) => {
  if (typeof window === "undefined") return () => {};
  const h = (e) => cb(e.detail);
  window.addEventListener("pairChange", h);
  return () => window.removeEventListener("pairChange", h);
};

/* ===================== Auth ===================== */
export const login     = (data) => api.post("/api/auth/login", data);
export const register  = (data) => api.post("/api/auth/register", data);
export const setToken  = (token) => {
  if (typeof window !== "undefined" && window.localStorage) {
    window.localStorage.setItem("token", token);
  }
  api.defaults.headers.common["Authorization"] = `Bearer ${token}`;
};
export const getToken  = () =>
  (typeof window !== "undefined" && window.localStorage?.getItem("token")) || null;
export const clearToken = () => {
  if (typeof window !== "undefined" && window.localStorage) {
    window.localStorage.removeItem("token");
  }
  delete api.defaults.headers.common["Authorization"];
};

/* ===================== Orders ===================== */
export const createOrder     = (data) => api.post("/api/orders", data);
export const getOpenOrders   = () => api.get("/api/orders?status=open");
export const getClosedOrders = () => api.get("/api/orders?status=closed");
export const cancelOrder     = (id)   => api.post(`/api/orders/${id}/cancel`);

/* ===================== Wallet ===================== */
export const getTransactions = () => api.get("/api/user/transactions");
export const withdraw        = (data) => api.post("/api/user/withdraw", data);
